// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique @db.VarChar(100)
  email    String  @unique @db.VarChar(100)
  password String  @db.VarChar(100)
  token    String? @db.VarChar(100)
  role     Role    @default(USER)

  profileId Profile?

  @@map("users")
}

model Profile {
  id       Int    @id @default(autoincrement())
  fullName String @db.VarChar(100)
  phone    String @db.VarChar(20)
  address  String @db.VarChar(250)

  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int  @unique

  @@map("profiles")
}

enum Role {
  USER
  ADMIN
}

model Menu {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  description String?   @db.VarChar(250)
  //
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int

  OrderItem OrderItem[]

  @@map("menus")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(100)
  Menu Menu[]

  @@map("categories")
}

model Order {
  id          Int         @id @default(autoincrement())
  createdAt   DateTime    @db.Date
  totalAmount Float       @db.Float
  items       OrderItem[]

  @@map("orders")
}

model OrderItem {
  id         Int   @id @default(autoincrement())
  quantity   Int   @db.Int
  //
  menuItem   Menu  @relation(fields: [menuItemId], references: [id])
  menuItemId Int
  order      Order @relation(fields: [orderId], references: [id])
  orderId    Int

  @@map("orderItems")
}
